#!/bin/bash
# AUTHOR: Guillermo A. Perez
# DESCRIPTION: The post-processor for realizability tools on .tlsf benchmarks
#              (Based on Jens Kreber's script)
# arg1 = the solver's output (which StarExec saves to a file!, so this is a
#        a file path too)
# arg2 = the absolute path to the benchmark file
# arg3 = the path to the "permanent directory" associated to the pair

syntffull="$1"
origf="$2"
permdir="$3"


syntbasef="$(basename -- $syntffull)"

syntf="nocomments_$syntbasef" # We do not need to keep this
syntcommentf="$permdir/nocomments_$syntbasef" # We want to keep this

if [ ! -f "$syntffull" ]; then
    echo "Error=No output file found!"
    exit
fi

if [ ! -d "$permdir" ]; then
    echo "Error=Syntcomp outputfolder does not exist"
    exit
fi

# Extension to output format:
# A comment always starts with "c " (like in dimacs)
# and can be either a starexec-value like
# c Algo1_subtime=11.1
# So a key=value pair. key must start with a capital letter (I guess?)
# keys and values are restricted to 128 characters
# Or simple strings
# c YourCommentAsString
# without a character limitation but which must NOT contain a "="
# Starexec-values will be shown in the job-output
# Basic comments are (without the " c"-prefix) copied
# into the job-output

# File without comment
grep -v $'[^\t]*\tc .*' "$syntffull" > "$syntf"

# Bare comments
grep $'[^\t]*\tc .*' "$syntffull" | sed 's/[^\t]*\tc //g' | grep -v "=" > "$syntcommentf"

#Keyword comments -> echoed to console
grep $'[^\t]*\tc .*' "$syntffull" | sed 's/[^\t]*\tc //g' | grep "="


syntline=$(grep -n "^[[:space:]]*//[[:space:]]*#!SYNTCOMP" "$origf" | head -n 1 | cut -d ':' -f 1)
if [ -z "$syntline" ]; then
	status="unknown"
else
    synttag=$(tail -n +"$syntline" "$origf")
    status=$(grep "STATUS[[:space:]]*:" <<< "$synttag" | cut -d ':' -f 2 | sed "s/ //g")
fi
echo "Expected_result=$status"

# Check realizability
if (grep -i -q $'.*\tUNREALIZABLE' "$syntf"); then  # the $'...'
    case "$status" in                               # results in \t being
	"realizable")                                   # correctly interpreted
        echo "Error=false negative"
	    exit 
	    ;;
	"unrealizable")
        echo "starexec-result=UNREALIZABLE"
	    exit
	    ;;
	"unknown")
        echo "starexec-result=NEW-UNREALIZABLE"
	    exit
	    ;;
	*)
	    echo "Error=Unknown status value"
	    exit
    esac
elif (grep -i -q $'.*\tREALIZABLE' "$syntf"); then
    case "$status" in
	"realizable")
        echo "starexec-result=REALIZABLE"
		exit
	    ;;
	"unrealizable")
        echo "Error=false positive"
	    exit 
	    ;;
	"unknown")
        echo "starexec-result=NEW-REALIZABLE"
		exit 
	    ;;
	*)
	    echo "Error=Unknown status value"
	    exit
    esac
fi

echo "Error=Found neither REALIZABLE nor UNREALIZABLE"
exit 
